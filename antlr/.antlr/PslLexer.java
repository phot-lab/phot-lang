// Generated from d:\科研项目\PhotLab\phot-lang\antlr\Psl.g4 by ANTLR 4.9.2
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class PslLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.9.2", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, AS=20, LET=21, USE=22, FUNC=23, TYPE=24, ENUM=25, 
		WITH=26, RETURN=27, INNER=28, SYNC=29, SCOPED=30, STATIC=31, ATOMIC=32, 
		NULL=33, TRUE=34, FALSE=35, ANY_TYPE=36, NUMBER_TYPE=37, STRING_TYPE=38, 
		BOOLEAN_TYPE=39, FUNCTOR_TYPE=40, BLOCK_TYPE=41, INTEGER_TYPE=42, REAL_TYPE=43, 
		COMPLEX_TYPE=44, ARRAY_TYPE=45, MATRIX_TYPE=46, LIST_TYPE=47, DICT_TYPE=48, 
		SKIP_=49, LINE_END=50, MULTI_STR=51, IDENTIFIER=52, UNIT=53, STRING=54, 
		FSTRING=55, INTEGER=56, REAL=57;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
			"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
			"T__17", "T__18", "AS", "LET", "USE", "FUNC", "TYPE", "ENUM", "WITH", 
			"RETURN", "INNER", "SYNC", "SCOPED", "STATIC", "ATOMIC", "NULL", "TRUE", 
			"FALSE", "ANY_TYPE", "NUMBER_TYPE", "STRING_TYPE", "BOOLEAN_TYPE", "FUNCTOR_TYPE", 
			"BLOCK_TYPE", "INTEGER_TYPE", "REAL_TYPE", "COMPLEX_TYPE", "ARRAY_TYPE", 
			"MATRIX_TYPE", "LIST_TYPE", "DICT_TYPE", "SKIP_", "LINE_END", "BLANK", 
			"LIN_CMT", "BLK_CMT", "LINE_MID", "MULTI_STR", "IDENTIFIER", "UNIT", 
			"STRING", "FSTRING", "INTEGER", "REAL", "DECIMAL", "OCTAL", "HEXADECIMAL", 
			"BINARY", "FLOAT", "EXPONENT_FLOAT", "EXPONENT_DECIMAL", "EXPONENT"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, "':'", "'='", "'('", "','", "')'", "'['", "']'", "'@'", "'<'", 
			"'>'", "'{'", "'}'", "'.'", "'->'", "';'", "'+'", "'-'", "'i'", "'?'", 
			"'as'", "'let'", "'use'", "'func'", "'type'", "'enum'", "'with'", "'return'", 
			"'inner'", "'sync'", "'scoped'", "'static'", "'atomic'", "'null'", "'true'", 
			"'false'", "'any'", "'number'", "'string'", "'bool'", "'functor'", "'block'", 
			"'int'", "'real'", "'complex'", "'array'", "'matrix'", "'list'", "'dict'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, null, null, null, null, null, null, null, null, null, null, null, 
			null, null, null, null, null, null, null, null, "AS", "LET", "USE", "FUNC", 
			"TYPE", "ENUM", "WITH", "RETURN", "INNER", "SYNC", "SCOPED", "STATIC", 
			"ATOMIC", "NULL", "TRUE", "FALSE", "ANY_TYPE", "NUMBER_TYPE", "STRING_TYPE", 
			"BOOLEAN_TYPE", "FUNCTOR_TYPE", "BLOCK_TYPE", "INTEGER_TYPE", "REAL_TYPE", 
			"COMPLEX_TYPE", "ARRAY_TYPE", "MATRIX_TYPE", "LIST_TYPE", "DICT_TYPE", 
			"SKIP_", "LINE_END", "MULTI_STR", "IDENTIFIER", "UNIT", "STRING", "FSTRING", 
			"INTEGER", "REAL"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public PslLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Psl.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964\2;\u023e\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\4F\tF\3\2\3\2\3\3\3\3"+
		"\3\4\3\4\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\t\3\t\3\n\3\n\3\13\3\13\3\f"+
		"\3\f\3\r\3\r\3\16\3\16\3\17\3\17\3\17\3\20\3\20\3\21\3\21\3\22\3\22\3"+
		"\23\3\23\3\24\3\24\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3"+
		"\27\3\30\3\30\3\30\3\30\3\30\3\31\3\31\3\31\3\31\3\31\3\32\3\32\3\32\3"+
		"\32\3\32\3\33\3\33\3\33\3\33\3\33\3\34\3\34\3\34\3\34\3\34\3\34\3\34\3"+
		"\35\3\35\3\35\3\35\3\35\3\35\3\36\3\36\3\36\3\36\3\36\3\37\3\37\3\37\3"+
		"\37\3\37\3\37\3\37\3 \3 \3 \3 \3 \3 \3 \3!\3!\3!\3!\3!\3!\3!\3\"\3\"\3"+
		"\"\3\"\3\"\3#\3#\3#\3#\3#\3$\3$\3$\3$\3$\3$\3%\3%\3%\3%\3&\3&\3&\3&\3"+
		"&\3&\3&\3\'\3\'\3\'\3\'\3\'\3\'\3\'\3(\3(\3(\3(\3(\3)\3)\3)\3)\3)\3)\3"+
		")\3)\3*\3*\3*\3*\3*\3*\3+\3+\3+\3+\3,\3,\3,\3,\3,\3-\3-\3-\3-\3-\3-\3"+
		"-\3-\3.\3.\3.\3.\3.\3.\3/\3/\3/\3/\3/\3/\3/\3\60\3\60\3\60\3\60\3\60\3"+
		"\61\3\61\3\61\3\61\3\61\3\62\3\62\3\62\3\62\5\62\u015c\n\62\3\62\3\62"+
		"\3\63\6\63\u0161\n\63\r\63\16\63\u0162\3\64\6\64\u0166\n\64\r\64\16\64"+
		"\u0167\3\65\3\65\3\65\3\65\7\65\u016e\n\65\f\65\16\65\u0171\13\65\3\65"+
		"\3\65\3\65\3\65\7\65\u0177\n\65\f\65\16\65\u017a\13\65\5\65\u017c\n\65"+
		"\3\66\3\66\3\66\3\66\7\66\u0182\n\66\f\66\16\66\u0185\13\66\3\66\3\66"+
		"\3\66\3\66\3\66\3\66\3\66\7\66\u018e\n\66\f\66\16\66\u0191\13\66\3\66"+
		"\3\66\3\66\5\66\u0196\n\66\3\67\3\67\5\67\u019a\n\67\3\67\3\67\38\38\3"+
		"8\38\38\78\u01a3\n8\f8\168\u01a6\138\38\38\38\38\38\38\38\38\78\u01b0"+
		"\n8\f8\168\u01b3\138\38\38\38\58\u01b8\n8\39\39\79\u01bc\n9\f9\169\u01bf"+
		"\139\3:\3:\3:\3:\3:\3:\7:\u01c7\n:\f:\16:\u01ca\13:\3:\3:\3;\3;\3;\3;"+
		"\3;\3;\7;\u01d4\n;\f;\16;\u01d7\13;\3;\3;\3;\3;\3;\3;\3;\7;\u01e0\n;\f"+
		";\16;\u01e3\13;\3;\5;\u01e6\n;\3<\3<\3<\3=\3=\3=\3=\3=\5=\u01f0\n=\3>"+
		"\3>\5>\u01f4\n>\3?\5?\u01f7\n?\3?\3?\7?\u01fb\n?\f?\16?\u01fe\13?\3?\5"+
		"?\u0201\n?\3@\5@\u0204\n@\3@\3@\6@\u0208\n@\r@\16@\u0209\3A\5A\u020d\n"+
		"A\3A\3A\3A\3A\6A\u0213\nA\rA\16A\u0214\3B\5B\u0218\nB\3B\3B\3B\3B\6B\u021e"+
		"\nB\rB\16B\u021f\3C\5C\u0223\nC\3C\6C\u0226\nC\rC\16C\u0227\3C\3C\6C\u022c"+
		"\nC\rC\16C\u022d\3D\3D\3D\3E\3E\3E\3F\3F\5F\u0238\nF\3F\6F\u023b\nF\r"+
		"F\16F\u023c\t\u0183\u018f\u01a4\u01b1\u01c8\u01d5\u01e1\2G\3\3\5\4\7\5"+
		"\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23"+
		"%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G"+
		"%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g\2i\2k\2m\2o\65q\66s\67u8w"+
		"9y:{;}\2\177\2\u0081\2\u0083\2\u0085\2\u0087\2\u0089\2\u008b\2\3\2\16"+
		"\4\2\f\f\17\17\5\2\13\13\16\16\"\"\4\2\f\f\16\17\5\2C\\aac|\6\2\62;C\\"+
		"aac|\4\2--//\3\2\63;\3\2\62;\3\2\629\5\2\62;CHch\3\2\62\63\4\2GGgg\2\u025e"+
		"\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2"+
		"\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2"+
		"\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2"+
		"\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2"+
		"\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3"+
		"\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2"+
		"\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2"+
		"U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3"+
		"\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2"+
		"\2\2w\3\2\2\2\2y\3\2\2\2\2{\3\2\2\2\3\u008d\3\2\2\2\5\u008f\3\2\2\2\7"+
		"\u0091\3\2\2\2\t\u0093\3\2\2\2\13\u0095\3\2\2\2\r\u0097\3\2\2\2\17\u0099"+
		"\3\2\2\2\21\u009b\3\2\2\2\23\u009d\3\2\2\2\25\u009f\3\2\2\2\27\u00a1\3"+
		"\2\2\2\31\u00a3\3\2\2\2\33\u00a5\3\2\2\2\35\u00a7\3\2\2\2\37\u00aa\3\2"+
		"\2\2!\u00ac\3\2\2\2#\u00ae\3\2\2\2%\u00b0\3\2\2\2\'\u00b2\3\2\2\2)\u00b4"+
		"\3\2\2\2+\u00b7\3\2\2\2-\u00bb\3\2\2\2/\u00bf\3\2\2\2\61\u00c4\3\2\2\2"+
		"\63\u00c9\3\2\2\2\65\u00ce\3\2\2\2\67\u00d3\3\2\2\29\u00da\3\2\2\2;\u00e0"+
		"\3\2\2\2=\u00e5\3\2\2\2?\u00ec\3\2\2\2A\u00f3\3\2\2\2C\u00fa\3\2\2\2E"+
		"\u00ff\3\2\2\2G\u0104\3\2\2\2I\u010a\3\2\2\2K\u010e\3\2\2\2M\u0115\3\2"+
		"\2\2O\u011c\3\2\2\2Q\u0121\3\2\2\2S\u0129\3\2\2\2U\u012f\3\2\2\2W\u0133"+
		"\3\2\2\2Y\u0138\3\2\2\2[\u0140\3\2\2\2]\u0146\3\2\2\2_\u014d\3\2\2\2a"+
		"\u0152\3\2\2\2c\u015b\3\2\2\2e\u0160\3\2\2\2g\u0165\3\2\2\2i\u017b\3\2"+
		"\2\2k\u0195\3\2\2\2m\u0197\3\2\2\2o\u01b7\3\2\2\2q\u01b9\3\2\2\2s\u01c0"+
		"\3\2\2\2u\u01e5\3\2\2\2w\u01e7\3\2\2\2y\u01ef\3\2\2\2{\u01f3\3\2\2\2}"+
		"\u01f6\3\2\2\2\177\u0203\3\2\2\2\u0081\u020c\3\2\2\2\u0083\u0217\3\2\2"+
		"\2\u0085\u0222\3\2\2\2\u0087\u022f\3\2\2\2\u0089\u0232\3\2\2\2\u008b\u0235"+
		"\3\2\2\2\u008d\u008e\7<\2\2\u008e\4\3\2\2\2\u008f\u0090\7?\2\2\u0090\6"+
		"\3\2\2\2\u0091\u0092\7*\2\2\u0092\b\3\2\2\2\u0093\u0094\7.\2\2\u0094\n"+
		"\3\2\2\2\u0095\u0096\7+\2\2\u0096\f\3\2\2\2\u0097\u0098\7]\2\2\u0098\16"+
		"\3\2\2\2\u0099\u009a\7_\2\2\u009a\20\3\2\2\2\u009b\u009c\7B\2\2\u009c"+
		"\22\3\2\2\2\u009d\u009e\7>\2\2\u009e\24\3\2\2\2\u009f\u00a0\7@\2\2\u00a0"+
		"\26\3\2\2\2\u00a1\u00a2\7}\2\2\u00a2\30\3\2\2\2\u00a3\u00a4\7\177\2\2"+
		"\u00a4\32\3\2\2\2\u00a5\u00a6\7\60\2\2\u00a6\34\3\2\2\2\u00a7\u00a8\7"+
		"/\2\2\u00a8\u00a9\7@\2\2\u00a9\36\3\2\2\2\u00aa\u00ab\7=\2\2\u00ab \3"+
		"\2\2\2\u00ac\u00ad\7-\2\2\u00ad\"\3\2\2\2\u00ae\u00af\7/\2\2\u00af$\3"+
		"\2\2\2\u00b0\u00b1\7k\2\2\u00b1&\3\2\2\2\u00b2\u00b3\7A\2\2\u00b3(\3\2"+
		"\2\2\u00b4\u00b5\7c\2\2\u00b5\u00b6\7u\2\2\u00b6*\3\2\2\2\u00b7\u00b8"+
		"\7n\2\2\u00b8\u00b9\7g\2\2\u00b9\u00ba\7v\2\2\u00ba,\3\2\2\2\u00bb\u00bc"+
		"\7w\2\2\u00bc\u00bd\7u\2\2\u00bd\u00be\7g\2\2\u00be.\3\2\2\2\u00bf\u00c0"+
		"\7h\2\2\u00c0\u00c1\7w\2\2\u00c1\u00c2\7p\2\2\u00c2\u00c3\7e\2\2\u00c3"+
		"\60\3\2\2\2\u00c4\u00c5\7v\2\2\u00c5\u00c6\7{\2\2\u00c6\u00c7\7r\2\2\u00c7"+
		"\u00c8\7g\2\2\u00c8\62\3\2\2\2\u00c9\u00ca\7g\2\2\u00ca\u00cb\7p\2\2\u00cb"+
		"\u00cc\7w\2\2\u00cc\u00cd\7o\2\2\u00cd\64\3\2\2\2\u00ce\u00cf\7y\2\2\u00cf"+
		"\u00d0\7k\2\2\u00d0\u00d1\7v\2\2\u00d1\u00d2\7j\2\2\u00d2\66\3\2\2\2\u00d3"+
		"\u00d4\7t\2\2\u00d4\u00d5\7g\2\2\u00d5\u00d6\7v\2\2\u00d6\u00d7\7w\2\2"+
		"\u00d7\u00d8\7t\2\2\u00d8\u00d9\7p\2\2\u00d98\3\2\2\2\u00da\u00db\7k\2"+
		"\2\u00db\u00dc\7p\2\2\u00dc\u00dd\7p\2\2\u00dd\u00de\7g\2\2\u00de\u00df"+
		"\7t\2\2\u00df:\3\2\2\2\u00e0\u00e1\7u\2\2\u00e1\u00e2\7{\2\2\u00e2\u00e3"+
		"\7p\2\2\u00e3\u00e4\7e\2\2\u00e4<\3\2\2\2\u00e5\u00e6\7u\2\2\u00e6\u00e7"+
		"\7e\2\2\u00e7\u00e8\7q\2\2\u00e8\u00e9\7r\2\2\u00e9\u00ea\7g\2\2\u00ea"+
		"\u00eb\7f\2\2\u00eb>\3\2\2\2\u00ec\u00ed\7u\2\2\u00ed\u00ee\7v\2\2\u00ee"+
		"\u00ef\7c\2\2\u00ef\u00f0\7v\2\2\u00f0\u00f1\7k\2\2\u00f1\u00f2\7e\2\2"+
		"\u00f2@\3\2\2\2\u00f3\u00f4\7c\2\2\u00f4\u00f5\7v\2\2\u00f5\u00f6\7q\2"+
		"\2\u00f6\u00f7\7o\2\2\u00f7\u00f8\7k\2\2\u00f8\u00f9\7e\2\2\u00f9B\3\2"+
		"\2\2\u00fa\u00fb\7p\2\2\u00fb\u00fc\7w\2\2\u00fc\u00fd\7n\2\2\u00fd\u00fe"+
		"\7n\2\2\u00feD\3\2\2\2\u00ff\u0100\7v\2\2\u0100\u0101\7t\2\2\u0101\u0102"+
		"\7w\2\2\u0102\u0103\7g\2\2\u0103F\3\2\2\2\u0104\u0105\7h\2\2\u0105\u0106"+
		"\7c\2\2\u0106\u0107\7n\2\2\u0107\u0108\7u\2\2\u0108\u0109\7g\2\2\u0109"+
		"H\3\2\2\2\u010a\u010b\7c\2\2\u010b\u010c\7p\2\2\u010c\u010d\7{\2\2\u010d"+
		"J\3\2\2\2\u010e\u010f\7p\2\2\u010f\u0110\7w\2\2\u0110\u0111\7o\2\2\u0111"+
		"\u0112\7d\2\2\u0112\u0113\7g\2\2\u0113\u0114\7t\2\2\u0114L\3\2\2\2\u0115"+
		"\u0116\7u\2\2\u0116\u0117\7v\2\2\u0117\u0118\7t\2\2\u0118\u0119\7k\2\2"+
		"\u0119\u011a\7p\2\2\u011a\u011b\7i\2\2\u011bN\3\2\2\2\u011c\u011d\7d\2"+
		"\2\u011d\u011e\7q\2\2\u011e\u011f\7q\2\2\u011f\u0120\7n\2\2\u0120P\3\2"+
		"\2\2\u0121\u0122\7h\2\2\u0122\u0123\7w\2\2\u0123\u0124\7p\2\2\u0124\u0125"+
		"\7e\2\2\u0125\u0126\7v\2\2\u0126\u0127\7q\2\2\u0127\u0128\7t\2\2\u0128"+
		"R\3\2\2\2\u0129\u012a\7d\2\2\u012a\u012b\7n\2\2\u012b\u012c\7q\2\2\u012c"+
		"\u012d\7e\2\2\u012d\u012e\7m\2\2\u012eT\3\2\2\2\u012f\u0130\7k\2\2\u0130"+
		"\u0131\7p\2\2\u0131\u0132\7v\2\2\u0132V\3\2\2\2\u0133\u0134\7t\2\2\u0134"+
		"\u0135\7g\2\2\u0135\u0136\7c\2\2\u0136\u0137\7n\2\2\u0137X\3\2\2\2\u0138"+
		"\u0139\7e\2\2\u0139\u013a\7q\2\2\u013a\u013b\7o\2\2\u013b\u013c\7r\2\2"+
		"\u013c\u013d\7n\2\2\u013d\u013e\7g\2\2\u013e\u013f\7z\2\2\u013fZ\3\2\2"+
		"\2\u0140\u0141\7c\2\2\u0141\u0142\7t\2\2\u0142\u0143\7t\2\2\u0143\u0144"+
		"\7c\2\2\u0144\u0145\7{\2\2\u0145\\\3\2\2\2\u0146\u0147\7o\2\2\u0147\u0148"+
		"\7c\2\2\u0148\u0149\7v\2\2\u0149\u014a\7t\2\2\u014a\u014b\7k\2\2\u014b"+
		"\u014c\7z\2\2\u014c^\3\2\2\2\u014d\u014e\7n\2\2\u014e\u014f\7k\2\2\u014f"+
		"\u0150\7u\2\2\u0150\u0151\7v\2\2\u0151`\3\2\2\2\u0152\u0153\7f\2\2\u0153"+
		"\u0154\7k\2\2\u0154\u0155\7e\2\2\u0155\u0156\7v\2\2\u0156b\3\2\2\2\u0157"+
		"\u015c\5g\64\2\u0158\u015c\5i\65\2\u0159\u015c\5k\66\2\u015a\u015c\5m"+
		"\67\2\u015b\u0157\3\2\2\2\u015b\u0158\3\2\2\2\u015b\u0159\3\2\2\2\u015b"+
		"\u015a\3\2\2\2\u015c\u015d\3\2\2\2\u015d\u015e\b\62\2\2\u015ed\3\2\2\2"+
		"\u015f\u0161\t\2\2\2\u0160\u015f\3\2\2\2\u0161\u0162\3\2\2\2\u0162\u0160"+
		"\3\2\2\2\u0162\u0163\3\2\2\2\u0163f\3\2\2\2\u0164\u0166\t\3\2\2\u0165"+
		"\u0164\3\2\2\2\u0166\u0167\3\2\2\2\u0167\u0165\3\2\2\2\u0167\u0168\3\2"+
		"\2\2\u0168h\3\2\2\2\u0169\u016a\7\61\2\2\u016a\u016b\7\61\2\2\u016b\u016f"+
		"\3\2\2\2\u016c\u016e\n\2\2\2\u016d\u016c\3\2\2\2\u016e\u0171\3\2\2\2\u016f"+
		"\u016d\3\2\2\2\u016f\u0170\3\2\2\2\u0170\u017c\3\2\2\2\u0171\u016f\3\2"+
		"\2\2\u0172\u0173\7%\2\2\u0173\u0174\7\"\2\2\u0174\u0178\3\2\2\2\u0175"+
		"\u0177\n\4\2\2\u0176\u0175\3\2\2\2\u0177\u017a\3\2\2\2\u0178\u0176\3\2"+
		"\2\2\u0178\u0179\3\2\2\2\u0179\u017c\3\2\2\2\u017a\u0178\3\2\2\2\u017b"+
		"\u0169\3\2\2\2\u017b\u0172\3\2\2\2\u017cj\3\2\2\2\u017d\u017e\7\61\2\2"+
		"\u017e\u017f\7,\2\2\u017f\u0183\3\2\2\2\u0180\u0182\13\2\2\2\u0181\u0180"+
		"\3\2\2\2\u0182\u0185\3\2\2\2\u0183\u0184\3\2\2\2\u0183\u0181\3\2\2\2\u0184"+
		"\u0186\3\2\2\2\u0185\u0183\3\2\2\2\u0186\u0187\7,\2\2\u0187\u0196\7\61"+
		"\2\2\u0188\u0189\7b\2\2\u0189\u018a\7b\2\2\u018a\u018b\7b\2\2\u018b\u018f"+
		"\3\2\2\2\u018c\u018e\13\2\2\2\u018d\u018c\3\2\2\2\u018e\u0191\3\2\2\2"+
		"\u018f\u0190\3\2\2\2\u018f\u018d\3\2\2\2\u0190\u0192\3\2\2\2\u0191\u018f"+
		"\3\2\2\2\u0192\u0193\7b\2\2\u0193\u0194\7b\2\2\u0194\u0196\7b\2\2\u0195"+
		"\u017d\3\2\2\2\u0195\u0188\3\2\2\2\u0196l\3\2\2\2\u0197\u0199\7^\2\2\u0198"+
		"\u019a\7\17\2\2\u0199\u0198\3\2\2\2\u0199\u019a\3\2\2\2\u019a\u019b\3"+
		"\2\2\2\u019b\u019c\7\f\2\2\u019cn\3\2\2\2\u019d\u019e\7)\2\2\u019e\u019f"+
		"\7)\2\2\u019f\u01a0\7)\2\2\u01a0\u01a4\3\2\2\2\u01a1\u01a3\13\2\2\2\u01a2"+
		"\u01a1\3\2\2\2\u01a3\u01a6\3\2\2\2\u01a4\u01a5\3\2\2\2\u01a4\u01a2\3\2"+
		"\2\2\u01a5\u01a7\3\2\2\2\u01a6\u01a4\3\2\2\2\u01a7\u01a8\7)\2\2\u01a8"+
		"\u01a9\7)\2\2\u01a9\u01b8\7)\2\2\u01aa\u01ab\7$\2\2\u01ab\u01ac\7$\2\2"+
		"\u01ac\u01ad\7$\2\2\u01ad\u01b1\3\2\2\2\u01ae\u01b0\13\2\2\2\u01af\u01ae"+
		"\3\2\2\2\u01b0\u01b3\3\2\2\2\u01b1\u01b2\3\2\2\2\u01b1\u01af\3\2\2\2\u01b2"+
		"\u01b4\3\2\2\2\u01b3\u01b1\3\2\2\2\u01b4\u01b5\7$\2\2\u01b5\u01b6\7$\2"+
		"\2\u01b6\u01b8\7$\2\2\u01b7\u019d\3\2\2\2\u01b7\u01aa\3\2\2\2\u01b8p\3"+
		"\2\2\2\u01b9\u01bd\t\5\2\2\u01ba\u01bc\t\6\2\2\u01bb\u01ba\3\2\2\2\u01bc"+
		"\u01bf\3\2\2\2\u01bd\u01bb\3\2\2\2\u01bd\u01be\3\2\2\2\u01ber\3\2\2\2"+
		"\u01bf\u01bd\3\2\2\2\u01c0\u01c8\7b\2\2\u01c1\u01c2\7^\2\2\u01c2\u01c7"+
		"\7b\2\2\u01c3\u01c4\7^\2\2\u01c4\u01c7\7^\2\2\u01c5\u01c7\13\2\2\2\u01c6"+
		"\u01c1\3\2\2\2\u01c6\u01c3\3\2\2\2\u01c6\u01c5\3\2\2\2\u01c7\u01ca\3\2"+
		"\2\2\u01c8\u01c9\3\2\2\2\u01c8\u01c6\3\2\2\2\u01c9\u01cb\3\2\2\2\u01ca"+
		"\u01c8\3\2\2\2\u01cb\u01cc\7b\2\2\u01cct\3\2\2\2\u01cd\u01d5\7$\2\2\u01ce"+
		"\u01cf\7^\2\2\u01cf\u01d4\7$\2\2\u01d0\u01d1\7^\2\2\u01d1\u01d4\7^\2\2"+
		"\u01d2\u01d4\13\2\2\2\u01d3\u01ce\3\2\2\2\u01d3\u01d0\3\2\2\2\u01d3\u01d2"+
		"\3\2\2\2\u01d4\u01d7\3\2\2\2\u01d5\u01d6\3\2\2\2\u01d5\u01d3\3\2\2\2\u01d6"+
		"\u01d8\3\2\2\2\u01d7\u01d5\3\2\2\2\u01d8\u01e6\7$\2\2\u01d9\u01e1\7)\2"+
		"\2\u01da\u01db\7^\2\2\u01db\u01e0\7)\2\2\u01dc\u01dd\7^\2\2\u01dd\u01e0"+
		"\7^\2\2\u01de\u01e0\13\2\2\2\u01df\u01da\3\2\2\2\u01df\u01dc\3\2\2\2\u01df"+
		"\u01de\3\2\2\2\u01e0\u01e3\3\2\2\2\u01e1\u01e2\3\2\2\2\u01e1\u01df\3\2"+
		"\2\2\u01e2\u01e4\3\2\2\2\u01e3\u01e1\3\2\2\2\u01e4\u01e6\7)\2\2\u01e5"+
		"\u01cd\3\2\2\2\u01e5\u01d9\3\2\2\2\u01e6v\3\2\2\2\u01e7\u01e8\7h\2\2\u01e8"+
		"\u01e9\5u;\2\u01e9x\3\2\2\2\u01ea\u01f0\5}?\2\u01eb\u01f0\5\177@\2\u01ec"+
		"\u01f0\5\u0081A\2\u01ed\u01f0\5\u0083B\2\u01ee\u01f0\5\u0089E\2\u01ef"+
		"\u01ea\3\2\2\2\u01ef\u01eb\3\2\2\2\u01ef\u01ec\3\2\2\2\u01ef\u01ed\3\2"+
		"\2\2\u01ef\u01ee\3\2\2\2\u01f0z\3\2\2\2\u01f1\u01f4\5\u0085C\2\u01f2\u01f4"+
		"\5\u0087D\2\u01f3\u01f1\3\2\2\2\u01f3\u01f2\3\2\2\2\u01f4|\3\2\2\2\u01f5"+
		"\u01f7\t\7\2\2\u01f6\u01f5\3\2\2\2\u01f6\u01f7\3\2\2\2\u01f7\u0200\3\2"+
		"\2\2\u01f8\u01fc\t\b\2\2\u01f9\u01fb\t\t\2\2\u01fa\u01f9\3\2\2\2\u01fb"+
		"\u01fe\3\2\2\2\u01fc\u01fa\3\2\2\2\u01fc\u01fd\3\2\2\2\u01fd\u0201\3\2"+
		"\2\2\u01fe\u01fc\3\2\2\2\u01ff\u0201\7\62\2\2\u0200\u01f8\3\2\2\2\u0200"+
		"\u01ff\3\2\2\2\u0201~\3\2\2\2\u0202\u0204\t\7\2\2\u0203\u0202\3\2\2\2"+
		"\u0203\u0204\3\2\2\2\u0204\u0205\3\2\2\2\u0205\u0207\7\62\2\2\u0206\u0208"+
		"\t\n\2\2\u0207\u0206\3\2\2\2\u0208\u0209\3\2\2\2\u0209\u0207\3\2\2\2\u0209"+
		"\u020a\3\2\2\2\u020a\u0080\3\2\2\2\u020b\u020d\t\7\2\2\u020c\u020b\3\2"+
		"\2\2\u020c\u020d\3\2\2\2\u020d\u020e\3\2\2\2\u020e\u020f\7\62\2\2\u020f"+
		"\u0210\7z\2\2\u0210\u0212\3\2\2\2\u0211\u0213\t\13\2\2\u0212\u0211\3\2"+
		"\2\2\u0213\u0214\3\2\2\2\u0214\u0212\3\2\2\2\u0214\u0215\3\2\2\2\u0215"+
		"\u0082\3\2\2\2\u0216\u0218\t\7\2\2\u0217\u0216\3\2\2\2\u0217\u0218\3\2"+
		"\2\2\u0218\u0219\3\2\2\2\u0219\u021a\7\62\2\2\u021a\u021b\7d\2\2\u021b"+
		"\u021d\3\2\2\2\u021c\u021e\t\f\2\2\u021d\u021c\3\2\2\2\u021e\u021f\3\2"+
		"\2\2\u021f\u021d\3\2\2\2\u021f\u0220\3\2\2\2\u0220\u0084\3\2\2\2\u0221"+
		"\u0223\t\7\2\2\u0222\u0221\3\2\2\2\u0222\u0223\3\2\2\2\u0223\u0225\3\2"+
		"\2\2\u0224\u0226\t\t\2\2\u0225\u0224\3\2\2\2\u0226\u0227\3\2\2\2\u0227"+
		"\u0225\3\2\2\2\u0227\u0228\3\2\2\2\u0228\u0229\3\2\2\2\u0229\u022b\7\60"+
		"\2\2\u022a\u022c\t\t\2\2\u022b\u022a\3\2\2\2\u022c\u022d\3\2\2\2\u022d"+
		"\u022b\3\2\2\2\u022d\u022e\3\2\2\2\u022e\u0086\3\2\2\2\u022f\u0230\5\u0085"+
		"C\2\u0230\u0231\5\u008bF\2\u0231\u0088\3\2\2\2\u0232\u0233\5}?\2\u0233"+
		"\u0234\5\u008bF\2\u0234\u008a\3\2\2\2\u0235\u0237\t\r\2\2\u0236\u0238"+
		"\t\7\2\2\u0237\u0236\3\2\2\2\u0237\u0238\3\2\2\2\u0238\u023a\3\2\2\2\u0239"+
		"\u023b\t\t\2\2\u023a\u0239\3\2\2\2\u023b\u023c\3\2\2\2\u023c\u023a\3\2"+
		"\2\2\u023c\u023d\3\2\2\2\u023d\u008c\3\2\2\2(\2\u015b\u0162\u0167\u016f"+
		"\u0178\u017b\u0183\u018f\u0195\u0199\u01a4\u01b1\u01b7\u01bd\u01c6\u01c8"+
		"\u01d3\u01d5\u01df\u01e1\u01e5\u01ef\u01f3\u01f6\u01fc\u0200\u0203\u0209"+
		"\u020c\u0214\u0217\u021f\u0222\u0227\u022d\u0237\u023c\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}